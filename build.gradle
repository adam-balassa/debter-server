import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

plugins {
    id 'maven-publish'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.jetbrains.kotlin.kapt' version '1.4.32'
}

group = "hu.balassa"
version = "0.0.1-SNAPSHOT"
description = "debter"

sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

apply plugin: "kotlin-kapt"

dependencies {
    compile (
            'org.jetbrains.kotlin:kotlin-stdlib:1.4.32',
            'com.amazonaws:aws-lambda-java-core:1.2.1',
            'com.amazonaws:aws-lambda-java-log4j2:1.5.1',
            'org.apache.logging.log4j:log4j-api:2.17.1',
            'org.apache.logging.log4j:log4j-core:2.17.1',
            'com.fasterxml.jackson.core:jackson-core:2.11.0',
            'com.fasterxml.jackson.core:jackson-databind:2.11.0',
            'com.fasterxml.jackson.core:jackson-annotations:2.11.0',
            'com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0',
            'org.jetbrains.kotlin:kotlin-reflect:1.4.32',
            'org.mapstruct:mapstruct:1.4.2.Final',
            'javax.validation:validation-api:2.0.1.Final',
            'org.hibernate.validator:hibernate-validator:6.1.7.Final',
            'software.amazon.awssdk:sdk-core:2.16.8',
            'software.amazon.awssdk:dynamodb-enhanced:2.16.8',
            'org.apache.httpcomponents:httpclient:4.5.13',
            'org.yaml:snakeyaml:1.27',
            'org.mockito.kotlin:mockito-kotlin:3.1.0',
            'com.github.tomakehurst:wiremock-jre8:2.28.1',
            'org.jetbrains.kotlin:kotlin-test:1.4.32',
    )
    kapt('org.mapstruct:mapstruct-processor:1.4.2.Final')
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
}

compileTestKotlin.onlyIf { false }

tasks.register("buildLayer", Copy) {
    from configurations.compile
    into "$buildDir/layer/java/lib"
}

shadowJar {
    archiveClassifier.set('')
    transform(Log4j2PluginsCacheFileTransformer)
}

task deploy(type: Exec, dependsOn: 'build') {
    commandLine 'serverless', 'deploy'
}

build.dependsOn buildLayer